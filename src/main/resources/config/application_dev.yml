#服务器端口设置
server:
  port: 8088

spring:
  #datasource的配置
  datasource:
    url: jdbc:mysql://47.93.225.228:3306/bank?useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: Yanht_201922
    driver-class-name: com.mysql.jdbc.Driver
    platform: mysql
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true

  #redis的配置
  redis:
    database: 0
    host: 47.93.225.228
    password: Yanht_201922
    port: 6379
    timeout: 6000
    pool:
      max-idle: 8
      min-idle: 0
      max-active: 20
      max-wait: 1



#mybatis-plus的配置
mybatis-plus:
  mapper-locations: classpath*:mapper/*/*.xml
  type-aliases-package: com.yht.demo.entity
  global-config:
    id-type: 0
    field-strategy: 2
    capital-mode: true
    refresh-mapper: true

